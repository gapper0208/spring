<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
		
	<!-- 之前一直使用bean元素来配置bean，这种方式，我们称之为：xml的显示配置 -->

	<!-- 
		下面将使用xml的隐式配置：扫描包+注解, 这里指定扫描m包，m包中会扫到3个类：
		AppTest
		User
		Car
		注意，并不是扫到类，容器就管理该类的对象，spring ioc容器要管理类的对象，该类上面还必须有特定的注解。
		这个特定注解有4种：@Component，@Repositoty，@Service，@Controller 这4个注解作用一样，区别仅仅是语义不同。
		
		
		总之，在xml的隐式配置的前提下， spring ioc要管理bean，必须满足两个条件：
		1. 扫描到某个类了
		2.被扫描到了类上面还必须有特定的注解。
		
		无论一个bean是xml显示配置出来的，还是扫描包扫描出来的，最终在容器中，效果都是一样的！只不过是来源不同。
	-->
	<context:component-scan base-package="com.woniuxy.m_annotation" />
	
	
	<bean id="car" class="com.woniuxy.m_annotation.Car"
		p:brand="奥巴马" p:color="黑色" />
	<bean id="car" class="com.woniuxy.m_annotation.Car"
		p:brand="的卢马" p:color="黑色" />
</beans>
